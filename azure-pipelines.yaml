trigger:
  branches:
    include:
    - main
  paths:
    exclude:
    - README.md
    - .gitignore
    - screenshots/

name: Deploy Webapp
variables:
  InfraProvisioningResoureGroupName: group20210504
  tfBackendStorageAccountName: tfbackend20210504
  tfBackendStorageContainerName: tf-backend-files-20210504
  tfBackendFileName: tf-state-file-20210504
  tfvarsFile: dev.tfvars
  python.version: '3.7.6'
stages:
- stage: Build
  jobs:
  - job: ProvisionInfrastructure
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo "provisioned infrastructure"
      displayName: 'Terraform Init, Plan and Apply'
  - job: UploadPackage
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: ArchiveFiles@2
      displayName: 'Archive Package'
      inputs:
        rootFolderOrFile: 'package'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-package.zip'
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-package.zip
      displayName: 'Upload Package'
      artifact: drop-package
# - stage: Deploy
#   jobs:
#   - deployment: FakeRestAPI
#     pool:
#       vmImage: 'Ubuntu-16.04'
#     environment: 'TEST'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             displayName: 'Deploy Azure Web App'
#             inputs:
#               azureSubscription: 'dev-sp'
#               appName: ''
#               appType: webApp
#               package: $(Pipeline.Workspace)/drop-package/$(Build.BuildId)-package.zip
#   - deployment: VMDeploy
#     displayName: NAME
#     environment:
#       name:  ENVIRONMENT NAME
#       resourceType: VirtualMachine
#       tags: TAG NAME
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: Bash@3
#             inputs:
#               targetType: 'inline'
#               script: |
#                 #! /bin/bash
                
#                 sudo apt-get upgrade -y
#                 sudo apt-get install python3-pip -y
#                 sudo apt-get install unzip -y
#                 sudo apt-get install -y chromium-browser
#                 pip3 install selenium
#                 export PATH=$PATH:some/path


